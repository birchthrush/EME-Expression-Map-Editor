<Window x:Class="EME_Expression_Map_Editor.ExpressionMapEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:dat="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
        xmlns:local="clr-namespace:EME_Expression_Map_Editor"
        xmlns:viewmodel="clr-namespace:EME_Expression_Map_Editor.ViewModel"
        xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        ResizeMode="CanMinimize"
        WindowStyle="SingleBorderWindow"
        Title="{StaticResource ApplicationTitle}" Height="960" Width="1107">
    <Window.InputBindings>
        <!--
        <KeyBinding Key="H" Modifiers="Ctrl" Command="{Binding OutputEventReplacementCommand}" />
        -->
    </Window.InputBindings>
    <Grid Background="{StaticResource WindowBackgroundColor}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Border Style="{StaticResource ElementBorder}" Margin="5 5 3 5">
                <StackPanel>
                    <Border BorderThickness="0 0 0 1" CornerRadius="10 10 0 0" Padding="10" Style="{StaticResource ElementBorder}">
                        <TextBlock Style="{StaticResource SectionHeader}" HorizontalAlignment="Center" Text="Sound Slots" />
                    </Border>
                    <StackPanel Orientation="Horizontal" Margin="10 10 10 0">
                        <Button Width="100" 
                                Content="{StaticResource AddElement}" 
                                Style="{StaticResource UpperLeftButton}" 
                                Command="{Binding AddSoundSlotCommand}"
                                CommandParameter="{Binding ElementName=SoundSlotGrid, Path=SelectedIndex}" 
                                />
                        <Button Width="100" 
                                BorderThickness="0 1 1 1"
                                Content="{StaticResource RemoveElement}" 
                                Style="{StaticResource UpperRightButton}"
                                Command="{Binding RemoveSoundSlotCommand}"
                                CommandParameter="{Binding ElementName=SoundSlotGrid}" 
                                />
                    </StackPanel>
                    <DataGrid Height="800" 
                              SelectionMode="Extended"
                              Name="SoundSlotGrid"
                              ItemsSource="{Binding SoundSlots}" 
                              SelectedValue="{Binding SelectedSlot}" 
                              SelectedIndex="{Binding SelectedSlotIndex}"
                              SelectionChanged="SoundSlotGrid_SelectionChanged"
                              dd:DragDrop.IsDragSource="True"
                              dd:DragDrop.IsDropTarget="True"
                              dd:DragDrop.DropHandler="{Binding Path=SlotDropHandler}"          
                              AllowDrop="True"
                              AutoGenerateColumns="False" 
                              Margin="10 0 10 0" 
                              VerticalScrollBarVisibility="Visible"
                              CanUserResizeColumns="False"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              CanUserReorderColumns="False"
                              CanUserSortColumns="False"
                              CanUserResizeRows="False"        
                              EnableRowVirtualization="False"
                              >
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Insert multiple new slots" Command="{Binding AddMultipleSlotsPopupCommand}" />
                                <MenuItem Header="Duplicate selected slots" Command="{Binding DuplicateSlotsCommand}" />
                                <Separator />
                                <MenuItem Header="Copy and auto-increment Remote Keys from first selected slot" Command="{Binding PropagateRemoteKeysCommand}" />
                                <Separator />
                                <MenuItem Header="Generate slot names from articulations" Command="{Binding GenerateNamesFromArticulationsCommand}" />
                                <Separator />
                                <MenuItem Header="Search-and-Replace ouptut events in selected slots" Command="{Binding OutputEventReplacementCommand}" />
                                <MenuItem Header="Copy output mapping from selected slot" Command="{Binding PropagateOutputMappingCommand}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.InputBindings>
                            <KeyBinding Key="N" Modifiers="Ctrl" 
                                        Command="{Binding AddMultipleSlotsPopupCommand}" />
                            <KeyBinding Key="D" Modifiers="Ctrl" 
                                         Command="{Binding DuplicateSlotsCommand}"
                                         />
                            <KeyBinding Key="Delete" Modifiers="Ctrl" 
                                    Command="{Binding RemoveSlotsCommand}"
                                    CommandParameter="{Binding ElementName=SoundSlotGrid, Path=SelectedItems}" 
                                    />
                        </DataGrid.InputBindings>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Remote" Width="50" Binding="{Binding RemoteKey}" />
                            <DataGridTextColumn Header="Name" Width="250" Binding="{Binding Name}" />
                            <DataGridTemplateColumn Header="Art.1" Width="50">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Path=DataContext.Group1Options, RelativeSource={RelativeSource AncestorType=Window}}"
                                                  SelectedValue="{Binding Art1, UpdateSourceTrigger=PropertyChanged}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="DropDownClosed">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SetArticulationCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                           CommandParameter="{Binding Art1}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Art.2" Width="50">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Path=DataContext.Group2Options, RelativeSource={RelativeSource AncestorType=Window}}"
                                                  SelectedValue="{Binding Art2, UpdateSourceTrigger=PropertyChanged}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="DropDownClosed">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SetArticulationCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                           CommandParameter="{Binding Art2}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Art.3" Width="50">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Path=DataContext.Group3Options, RelativeSource={RelativeSource AncestorType=Window}}"
                                                  SelectedValue="{Binding Art3, UpdateSourceTrigger=PropertyChanged}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="DropDownClosed">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SetArticulationCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                           CommandParameter="{Binding Art3}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Art.4" Width="50">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Path=DataContext.Group4Options, RelativeSource={RelativeSource AncestorType=Window}}"
                                                  SelectedValue="{Binding Art4, UpdateSourceTrigger=PropertyChanged}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="DropDownClosed">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SetArticulationCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                           CommandParameter="{Binding Art4}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Color" Width="50" CanUserResize="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{StaticResource DefaultColorOptions}" 
                                             ItemTemplate="{StaticResource ColorPicker}"      
                                             SelectedIndex="{Binding Color, UpdateSourceTrigger=PropertyChanged}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="DropDownClosed">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SetColorCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                           CommandParameter="{Binding Color}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Margin="10 15 10 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22" />
                        </Grid.RowDefinitions>
                        <TextBox Grid.Column="0" 
                                Margin="0 0 10 0"
                                Padding="5 0 0 0"
                                VerticalContentAlignment="Center"
                                Style="{StaticResource NameBox}"
                                Text="{Binding Name}" />
                        <Button Grid.Column="1" Height="22"
                                VerticalContentAlignment="Center" 
                                Margin="0 0 5 0" 
                                Style="{StaticResource RoundedButton}" 
                                Content="Load" 
                                Command="{Binding LoadFileCommand}"
                                CommandParameter="{Binding Name}"
                                />
                        <Button Grid.Column="2" Height="22"
                                VerticalContentAlignment="Center" 
                                Margin="5 0 0 0" 
                                Style="{StaticResource RoundedButton}" 
                                Content="Save" 
                                Command="{Binding SaveFileCommand}"
                                CommandParameter="{Binding Name}"
                                />
                    </Grid>
                </StackPanel>
            </Border>
        </Grid>
        <Grid Grid.Column="1" Margin="0 0 5 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Style="{StaticResource ElementBorder}" Margin="0 5 0 3"  Background="{StaticResource ElementBackgroundColor}">
                <StackPanel>
                    <Border BorderThickness="0 0 0 1" CornerRadius="10 10 0 0" Padding="10" Style="{StaticResource ElementBorder}">
                        <TextBlock Style="{StaticResource SectionHeader}" HorizontalAlignment="Center" Text="Output Events" />
                    </Border>
                    <StackPanel Orientation="Horizontal" Margin="10 10 10 0">
                        <Button Width="100"
                                Content="{StaticResource AddElement}" 
                                Style="{StaticResource UpperLeftButton}"
                                Command="{Binding SelectedSlot.AddNewOutputEventCommand}"
                                CommandParameter="{Binding ElementName=OutputEventsGrid, Path=SelectedIndex}" />
                        <Button Width="100"
                                Content="{StaticResource RemoveElement}" 
                                Style="{StaticResource UpperRightButton}"
                                Command="{Binding SelectedSlot.RemoveOutputEventsCommand}"
                                CommandParameter="{Binding ElementName=OutputEventsGrid, Path=SelectedItems}" />
                    </StackPanel>
                    <DataGrid ItemsSource="{Binding SelectedSlot.OutputEvents}" 
                              SelectedIndex="{Binding SelectedSlot.SelectedEventIndex}"
                              Name="OutputEventsGrid"
                              SelectionMode="Single"
                              dd:DragDrop.IsDragSource="True"
                              dd:DragDrop.IsDropTarget="True"
                              dd:DragDrop.DropHandler="{Binding OutputEventDropHandler}"
                              KeyboardNavigation.TabNavigation="None"
                              CanUserDeleteRows="False"
                              CanUserAddRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeRows="False"
                              CanUserSortColumns="False"
                              CanUserResizeColumns="False"
                              Height="200"
                              Margin="10 0 10 10"
                              AutoGenerateColumns="False">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Increment Data1 nth Event On All Selected Slots" 
                                          Command="{Binding CascadeOutputEventCommand}" 
                                          CommandParameter="{Binding SelectedSlot.SelectedEventIndex}"  />
                                <MenuItem Header="Copy Event To All Selected Slots" 
                                          Command="{Binding CopyOutputEventCommand}"
                                          CommandParameter="{Binding SelectedSlot.SelectedEventIndex}" />
                                <MenuItem Header="Copy Event To All Selected Slots And Increment Data1" 
                                          Command="{Binding CopyOutputEventIncrementData1Command}"
                                          CommandParameter="{Binding SelectedSlot.SelectedEventIndex}" />
                                <MenuItem Header="Copy Event To All Selected Slots And Increment Data2" 
                                          Command="{Binding CopyOutputEventIncrementData2Command}"
                                          CommandParameter="{Binding SelectedSlot.SelectedEventIndex}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Type" Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding EventTypeOptions}" 
                                                  SelectedValue="{Binding EventType, UpdateSourceTrigger=PropertyChanged}"                                                  
                                                  DisplayMemberPath="Value" 
                                                  SelectedValuePath="Key"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center" >
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Data 1" Width="75" Binding="{Binding Data1}"/>
                            <DataGridTextColumn Header="Data 2" Width="75" Binding="{Binding Data2}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Border Style="{StaticResource ElementBorder}" 
                            BorderThickness="0 2 0 0" 
                            Padding="5"
                            Background="{StaticResource HeaderBackgroundColor}" 
                            CornerRadius="0 0 9 9">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="50" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="25" />
                                <RowDefinition Height="25" />
                                <RowDefinition Height="25" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource BrighterTextBlock}">Channel</TextBlock>
                            <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource BrighterTextBlock}">Length</TextBlock>
                            <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource BrighterTextBlock}">Transpose</TextBlock>
                            <TextBlock Grid.Column="0" Grid.Row="3" Style="{StaticResource BrighterTextBlock}">Velocity</TextBlock>
                            <TextBlock Grid.Column="2" Grid.Row="0" Style="{StaticResource BrighterTextBlock}" Padding="10 0 0 0">Min. Pitch</TextBlock>
                            <TextBlock Grid.Column="2" Grid.Row="1" Style="{StaticResource BrighterTextBlock}" Padding="10 0 0 0">Max Pitch</TextBlock>
                            <TextBlock Grid.Column="2" Grid.Row="2" Style="{StaticResource BrighterTextBlock}" Padding="10 0 0 0">Min. Velocity</TextBlock>
                            <TextBlock Grid.Column="2" Grid.Row="3" Style="{StaticResource BrighterTextBlock}" Padding="10 0 0 0">Max Velocity</TextBlock>
                            <ComboBox Foreground="{StaticResource DefaultForegroundColor}"
                                Grid.Column="1" Grid.Row="0" BorderThickness="0 1 0 0"
                                ItemsSource="{Binding SelectedSlot.ChannelOptions}" 
                                SelectedValue="{Binding SelectedSlot.Channel}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DropDownClosed">
                                        <i:InvokeCommandAction 
                                            Command="{Binding Path=DataContext.SetChannelCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                            />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding SelectedSlot.LengthFactor}" />
                            <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding SelectedSlot.Transpose}" />
                            <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding SelectedSlot.VelocityFactor}" />
                            <TextBox Grid.Column="3" Grid.Row="0" Text="{Binding SelectedSlot.MinPitch}" />
                            <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding SelectedSlot.MaxPitch}" />
                            <TextBox Grid.Column="3" Grid.Row="2" Text="{Binding SelectedSlot.MinVelocity}" />
                            <TextBox Grid.Column="3" Grid.Row="3" Text="{Binding SelectedSlot.MaxVelocity}" />
                        </Grid>
                    </Border>
                </StackPanel>
            </Border>
            <Border Grid.Row="1" Style="{StaticResource ElementBorder}" Margin="0 2 0 5">
                <StackPanel>
                    <Border BorderThickness="0 0 0 1" CornerRadius="10 10 0 0" Padding="10" Style="{StaticResource ElementBorder}">
                        <TextBlock Style="{StaticResource SectionHeader}" HorizontalAlignment="Center" Text="Articulations" />
                    </Border>
                    <StackPanel Orientation="Horizontal" Margin=" 10 10 10 0">
                        <Button Content="{StaticResource AddElement}" 
                                Style="{StaticResource UpperLeftButton}"
                                Command="{Binding AddArticulationCommand}"
                                CommandParameter="{Binding ElementName=ArticulationGrid, Path=SelectedIndex}"
                                Width="100" />
                        <Button Content="{StaticResource RemoveElement}" 
                                Style="{StaticResource UpperRightButton}"
                                Command="{Binding RemoveArticulationCommand}"
                                Width="100" />
                    </StackPanel>
                    <DataGrid ItemsSource="{Binding Articulations}"
                              SelectedIndex="{Binding SelectedArticulationIndex}"
                              Name="ArticulationGrid"
                              SelectionMode="Extended"
                              SelectionChanged="ArticulationGrid_SelectionChanged"
                              dd:DragDrop.IsDragSource="True"
                              dd:DragDrop.IsDropTarget="True"
                              dd:DragDrop.DropHandler="{Binding ArticulationDropHandler}"
                              Height="450"
                              Margin="10 0 10 10"
                              AutoGenerateColumns="False"
                              CanUserDeleteRows="False"
                              CanUserAddRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeRows="False"
                              CanUserResizeColumns="False"        
                              CanUserSortColumns="False"
                              EnableRowVirtualization="False">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Insert multiple new articulation" Command="{Binding AddMultipleArticulationsPopupCommand}" />
                                <MenuItem Header="Remove unused articulations" Command="{Binding RemoveUnusedArticulationsCommand}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.InputBindings>
                            <KeyBinding Key="N" Modifiers="Ctrl" 
                                        Command="{Binding AddMultipleArticulationsPopupCommand}" 
                                        />
                            <KeyBinding Key="Delete" Modifiers="Ctrl" 
                                        Command="{Binding RemoveArticulationCommand}" 
                                        CommandParameter="{Binding ElementName=ArticulationGrid, Path=SelectedItems}"
                                        />
                            <KeyBinding Key="Insert" Modifiers="Ctrl"
                                        Command="{Binding AddArticulationCommand}"
                                        CommandParameter="{Binding ElementName=ArticulationGrid, Path=SelectedIndex}"
                                        />
                        </DataGrid.InputBindings>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Type" Width="50">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding DisplayTypeOptions}" 
                                                  SelectedValue="{Binding DisplayType, UpdateSourceTrigger=PropertyChanged}"                                                  
                                                  DisplayMemberPath="Value" 
                                                  SelectedValuePath="Key"
                                                  
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="DropDownClosed">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SetArticulationDisplayTypeCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                            CommandParameter="{Binding DisplayType}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Type" Width="75">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding ArticulationTypeOptions}" 
                                                  SelectedValue="{Binding ArticulationType, UpdateSourceTrigger=PropertyChanged}"                                                  
                                                  DisplayMemberPath="Value" 
                                                  SelectedValuePath="Key"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="DropDownClosed">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SetArticulationTypeCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                            CommandParameter="{Binding ArticulationType}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Text/Symbol" 
                                                Width="90" 
                                                Binding="{Binding SymbolOrText}"                                                
                                                >
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Description" Width="200" Binding="{Binding Description}"/>
                            <DataGridTemplateColumn Header="Group" Width="50" KeyboardNavigation.IsTabStop="True" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding GroupOptions}" 
                                                  SelectedValue="{Binding Group, UpdateSourceTrigger=PropertyChanged}"       
                                                  DisplayMemberPath="Value"
                                                  SelectedValuePath="Key"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="DropDownClosed">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SetGroupCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                           CommandParameter="{Binding Group}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</Window>
